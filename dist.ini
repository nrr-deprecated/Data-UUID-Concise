name              = Data-UUID-Concise
author            = Nathaniel Reindl <nrr@corvidae.org>
license           = Perl_5
copyright_holder  = Nathaniel Reindl

; metadata
[AutoPrereqs]      
[MinimumPerl]      
[GithubMeta]
 
[MetaNoIndex]      
directory = t
directory = xt
directory = examples
directory = corpus
package = DB       
 
[Bugtracker]
web = https://github.com/nrr/%s/issues
mailto = nrr+bug-%U@corvidae.org
 
[MetaProvides::Package]
meta_noindex = 1
 
[MetaYAML]
[MetaJSON]

; version provider
[AutoVersion] 
major = 0
 
; choose files to include
[GatherDir]
exclude_filename = README.pod
exclude_filename = META.json
exclude_filename = .gitignore
exclude_filename = .perlcriticrc
exclude_filename = .perltidyrc
 
[PruneCruft]       
except = .gitignore
except = .perlcriticrc
except = .perltidyrc

[ManifestSkip]     
 
; file modifications
[OurPkgVersion]    
[InsertCopyright]   

[PodWeaver]        

[PerlTidy]
perltidyrc = .perltidyrc
 
; generated files
[License]          
[ReadmeFromPod]    

[ReadmeAnyFromPod] 
type = pod
filename = README.pod
location = root
 
; t tests
[Test::Compile]    
fake_home = 1      
 
; xt tests
[Test::PodSpelling] 

[Test::Perl::Critic]
critic_config = .perlcriticrc

[MetaTests]        
[PodSyntaxTests]   
[PodCoverageTests] 
[Test::Portability]
[Test::Version]    
 
; build system
[ExecDir]
[ShareDir]
[MakeMaker]
 
; manifest (after all generated files)
[Manifest]
 
; copy META.json back to repo dis
[CopyFilesFromBuild]
copy = META.json
move = .gitignore
 
; before release
[Git::Check]       
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = README.pod
allow_dirty = META.json
 
[CheckPrereqsIndexed]   
[CheckChangesHasContent]
[CheckExtraTests]  
[TestRelease]      
[ConfirmRelease]   
 
; releaser
[FakeRelease]     
 
; after release
[NextRelease]
 
[Git::Commit]
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = README.pod
allow_dirty = META.json
 
[Git::Tag]         
tag_format = release-%v
 
[Git::Push]        
push_to = origin
